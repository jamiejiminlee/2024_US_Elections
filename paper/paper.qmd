---
title: "2024 US Presidential Election Model"
subtitle: "My subtitle if needed"
author: 
  - Jimin Lee
  - Sarah Ding
  - Xiyan Chen
thanks: "Code and data are available at: [https://github.com/jamiejiminlee/2024_US_Elections.git](https://github.com/jamiejiminlee/2024_US_Elections.git)."
date: today
date-format: long
abstract: "Placeholder: This paper presents a predictive model for the 2024 United States Presidential Election, utilizing polling data from various states. The model aggregates high-quality poll data, focusing on support for the two main candidates, Donald Trump and Kamala Harris. Using state-level polling averages, we create a linear model to predict the election outcome in each state. The model compares the polling percentages of both candidates to identify the likely winner. A geographic visualization provides a state-by-state breakdown, showing which candidate is predicted to win based on the polling data. The results offer insights into the competitive dynamics of the election and demonstrate the power of polling data in forecasting political outcomes. Furthermore, we discuss the methodology used to filter for high-quality pollsters and ensure data accuracy. The paper concludes with a reflection on the modelâ€™s limitations and the potential impact of polling biases on electoral predictions."
format: pdf
number-sections: true
bibliography: references.bib
---


```{r}
#| include: false
#| warning: false
#| message: false

library(tidyverse)
library(janitor)
library(lubridate)
library(modelsummary)
library(rstanarm)
library(readr)
library(dplyr)
library(ggplot2)
library(usmap)
```


# Introduction

This paper develops a predictive model for the 2024 US Presidential Election using high-quality polling data. By aggregating state-level poll results for Donald Trump and Kamala Harris, we forecast the likely winner in each state. Our analysis leverages a linear regression model, with state-wise polling percentages as predictor variables, to estimate the outcome of the election.

The estimand in this study is the probability that Donald Trump or Kamala Harris wins a given state, based on state-level polling averages. The binary outcome variable indicates whether Trump (1) or Harris (0) is predicted to win each state.

Our model predicts the election outcome by comparing the average polling percentages for Trump and Harris in each state. The results show a geographic distribution of support, with some states clearly favoring one candidate. The map visualization highlights these state-by-state predictions, offering insight into key battleground states and strongholds for both candidates.

Accurate election predictions are crucial for understanding voter dynamics and campaign strategies. By focusing on high-quality polling data, this model provides a more reliable forecast of the election outcome, which can help inform both political analysts and the public about potential election results and voting trends.

The remainder of this paper is structured as follows. In @sec-data, we describe the data and the variables used in the analysis. @sec-model outlines the model setup and estimation strategy. @sec-results presents the results, including the predicted election outcomes and visualizations. Finally, @sec-discussion the implications and limitations of our findings.


# Data {#sec-data}

## Overview

Placholder - We use the statistical programming language R [@citeR] for all data manipulation, modeling, and visualization in this study. Our data [@shelter] was obtained from the public polling aggregation website FiveThirtyEight, which provides comprehensive polling data for the 2024 US Presidential Election [@fivethirtyeight]. The dataset includes national polls conducted by various polling organizations, capturing voter support for the two leading candidates, Donald Trump and Kamala Harris. The dataset records critical variables such as the pollster, sample size, and percentage of voter support for each candidate.



## Measurement
	
To predict the election outcome, we will assume that the higher pct in a state between Trump and Harris determines the winner of the election. The difference in pct is used as the predictor for which candidate wins each state. 

## Outcome variables

The outcome variable in our analysis is the binary variable winner, which represents the predicted winner of the 2024 US Presidential Election in each state. The value of winner is set to 1 if Donald Trump is predicted to win the state, and 0 if Kamala Harris is predicted to win. This binary outcome is determined by comparing the polling support for both candidates within each state. By setting up this binary variable, we aim to forecast which candidate will secure more votes in each state based on the aggregated polling data.


@fig-averagetable provides an overview of the average support for Trump and Harris across all states, along with the predicted winner for each state based on our model. 

```{r}
#| label: fig-averagetable
#| fig-cap: Summary Table of Polling Averages by State
#| echo: false
#| warning: false
#| message: false

# Load cleaned data
clean_poll_data <- read_csv("/Users/jamielee/2024_US_Elections/data/02-analysis_data/analysis_data.csv")

# Aggregating polling percentages for Trump and Harris by state
state_average <- clean_poll_data %>%
  group_by(state) %>%
  summarise(
    Trump_pct = mean(pct[candidate_name == "Donald Trump"], na.rm = TRUE),
    Harris_pct = mean(pct[candidate_name == "Kamala Harris"], na.rm = TRUE)
  )

# Create winner column: 1 if Trump_pct is greater than Harris_pct, 0 otherwise
state_average <- state_average |>
  mutate(winner = ifelse(Trump_pct > Harris_pct, 1, 0))

average_table <- state_average |>
  select(state, Trump_pct, Harris_pct, winner) |>
  mutate(predicted_winner = ifelse(winner == 1, "Trump", "Harris"))

# Render the simplest possible table
knitr::kable(average_table, caption = "Summary Table of Polling Averages by State")

```

## Predictor variables

The predictor variables used in the model are the aggregated polling percentages for Donald Trump (Trump_pct) and Kamala Harris (Harris_pct). These variables are calculated as the average support for each candidate, using polling data filtered to include only high-quality pollsters with a numeric grade of 3 or higher and transparency scores above 6. These averages reflect the level of support for each candidate across all polls in each state. To further illustrate the distribution of support, a side-by-side bar graph is provided, comparing the average polling percentages for both candidates across all states. This visualization offers a clear comparison of the support levels, helping to visualize the competitive dynamics within each state.

@fig-barplot illustrates the average polling support for Donald Trump and Kamala Harris in each state. The side-by-side comparison represents the percentage of support each candidate has received, based on aggregated poll data from pollsters with high-quality scores. Trump's support is shown in red, while Harris's support is depicted in red. 

```{r}
#| label: fig-barplot
#| fig-cap: Average Poll Percentage by State
#| echo: false
#| warning: false

# Reshape data to a long format for side-by-side bars
stateaverage_long <- state_average %>%
  pivot_longer(cols = c(Trump_pct, Harris_pct),
               names_to = "candidate",
               values_to = "support_pct")

ggplot(stateaverage_long, aes(x=reorder(state, -support_pct), y= support_pct, fill = candidate)) + 
  geom_bar(stat = "identity", position = position_dodge(width = 0.8), color = "black") +
  labs(title = "Average Poll Percentages for Trump and Harris by State",
       x = "State", y = "Average Percentage") +
  scale_fill_manual(name = "Candidate", values = c("Trump_pct" = "red", "Harris_pct" = "blue")) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))
```


# Model {#sec-model}

The goal of our modeling strategy is twofold. Firstly, we aim to predict the winner of the 2024 US Presidential Election in each state based on aggregated polling data. Secondly, we seek to understand the relationship between polling support for each candidate and the likelihood of winning a state. Here we briefly describe the Bayesian analysis model used to investigate these relationships. This model allows for uncertainty in the predictions by incorporating prior distributions for the parameters, providing a probabilistic framework for estimating the election outcome. Background details and diagnostics are included in [Appendix -@sec-model-details].

## Model set-up
Define $y_i$ as the binary outcome variable indicating whether Donald Trump is predicted to win state $i$ (1 if Trump wins, 0 if Harris wins). The predictor variables are $\beta_i$, the average percentage of polling support for Donald Trump in state $i$, and $\gamma_i$, the average percentage of polling support for Kamala Harris in state $i$.


\begin{align*}
y_i | \mu_i &\sim \text{Bernoulli}(\mu_i) \\
\mu_i &= \alpha + \beta_i + \gamma_i \\
\alpha &\sim \text{Normal}(0, 2.5) \\
\beta_i &\sim \text{Normal}(0, 2.5) \\
\gamma_i &\sim \text{Normal}(0, 2.5)
\end{align*}



We run the model in R [@citeR] using the `rstanarm` package [@rstanarm]. The model uses default priors from `rstanarm`, and estimates the likelihood of Donald Trump winning each state based on polling averages for both candidates.


```{r}
#| echo: false
#| eval: true
#| warning: false
#| message: false

library(rstanarm)

logistic_model <-
  readRDS(file = here::here("models/first_model.rds"))
```

The model used to predict the 2024 US Presidential Election outcome is a logistic regression model. The binary outcome variable, $y_i$, represents whether Donald Trump (1) or Kamala Harris (0) is predicted to win each state. The predictor variables, $\beta_i$ and $\gamma_i$, are the average polling percentages for Trump and Harris, respectively, in state $i$. We use a logistic regression model because the outcome is binary, making it appropriate for estimating the probability of a Trump victory in each state. The model is implemented in R using the `glm()` function with a binomial family, providing a probabilistic prediction of the election outcome based on polling data.


## Model Justification

We expect a positive relationship between polling support for each candidate and the likelihood of winning a state. In particular, as the percentage of support for Donald Trump ($\beta_i$) increases, the probability of Trump winning state $i$ also increases. Similarly, as Kamala Harris's support ($\gamma_i$) increases, the likelihood of her winning the state rises. The logistic regression model is suitable for capturing these dynamics, as it allows us to estimate the probability of a binary outcome (win or lose) using continuous predictor variables. The model outputs probabilities that are constrained between 0 and 1, which aligns with the binary nature of our outcome variable ($y_i$). In essence, we expect a higher $\beta_i$ to correlate with a higher probability of Trump winning a state, while a higher $\gamma_i$ suggests a greater likelihood of a Harris victory.


# Results {#sec-results}

@fig-statemap shows the predicted winner of the 2024 US Presidential Election by state, based on a logistic regression model using aggregated polling data for Donald Trump and Kamala Harris. States where Trump is predicted to win are shown in red, while states where Harris is predicted to win are displayed in blue. Several states appear in gray, indicating that the model could not generate a prediction due to incomplete or missing polling data. The results highlight clear regional differences, with Trump expected to perform strongly in the southern and midwestern states, while Harris is favored in parts of the Northeast and Midwest. The predicted outcomes underscore the importance of swing states, where polling results are closely contested and could shift the election results.


## Predicted Election Winner By State
```{r}
#| label: fig-statemap
#| fig-cap: Predicted Election Winner by State
#| echo: false
#| warning: false
#| message: false
#| cache: false

#### Workspace setup ####
library(tidyverse)
library(usmap)
library(ggplot2)
library(rstanarm)

# Check for missing values in state_average and ensure data is clean
state_average <- state_average %>%
  filter(!is.na(Trump_pct) & !is.na(Harris_pct)) %>%
  ungroup()


# Proceed with prediction after ensuring the data is clean
predicted_prob <- predict(logistic_model, newdata = state_average, type = "response")

# Ensure predicted_prob matches the number of rows in state_average
if (length(predicted_prob) != nrow(state_average)) {
  stop("Mismatch between predicted_prob and state_average rows")
}

# Add predicted_prob to state_average
state_average <- state_average %>%
  mutate(predicted_prob = predicted_prob)

# Classify the predicted winner: Trump if probability > 0.5, else Harris
state_average <- state_average %>%
  mutate(predicted_winner = ifelse(predicted_prob > 0.5, "Trump", "Harris"))

# Map visualization showing predicted winner by state
plot_usmap(data = state_average, values = "predicted_winner", regions = "states") +
  scale_fill_manual(values = c("Trump" = "red", "Harris" = "blue"), name = "Predicted Winner") +
  labs(title = "Predicted Winner of 2024 US Presidential Election by State") +
  theme(legend.position = "right")

# Remove any states with missing polling data for Trump or Harris
#state_average <- state_average %>%
  #filter(!is.na(Trump_pct) & !is.na(Harris_pct))

# Proceed with the prediction for all states
#state_average <- state_average %>%
  #mutate(predicted_prob = predict(logistic_model, newdata = state_average, type = "response"))

# Classify the predicted winner: Trump if probability > 0.5, else Harris
#state_average <- state_average %>%
  #mutate(predicted_winner = ifelse(predicted_prob > 0.5, "Trump", "Harris"))

#### Map Visualization ####
#plot_usmap(data = state_average, values = "predicted_winner", regions = "states") +
  #scale_fill_manual(values = c("Trump" = "red", "Harris" = "blue"), name = "Predicted Winner") +
  #labs(title = "Predicted Winner of 2024 US Presidential Election by State") +
  #theme(legend.position = "right")
```

It is important to note that several states remain uncolored (in gray), indicating missing or incomplete polling data for those states. These uncolored states reflect the absence of reliable or sufficient polling information required for an accurate prediction. This underscores the limitations of the data used in the model, where predictions are only made for states with adequate polling coverage. As a result, certain regions lack predictions, which could be addressed by including more comprehensive polling data in future analyses.


### Summary of Predicted Election Results by State

@tbl-modelresults presents a summary of the predicted 2024 US Presidential Election results on a state-by-state basis. It includes the average polling percentages for Donald Trump and Kamala Harris, the predicted probability of Trump winning each state based on a logistic regression model, and the predicted winner in each state. 

```{r}
#| echo: false
#| eval: true
#| label: tbl-modelresults
#| tbl-cap: "Predicted 2024 US Presidential Election outcomes by state, based on polling percentages for Trump and Harris"
#| warning: false


#### Create and Display the Summary Table ####
summary_table <- state_average %>%
  select(state, Trump_pct, Harris_pct, predicted_prob, predicted_winner) %>%
  rename(
    "State" = state,
    "Trump Polling (%)" = Trump_pct,
    "Harris Polling (%)" = Harris_pct,
    "Predicted Trump Win Probability" = predicted_prob,
    "Predicted Winner" = predicted_winner
  )

knitr::kable(summary_table, caption = "Summary of Predicted 2024 US Presidential Election Results by State", escape = TRUE)


```

According to our model results, in **Florida**, Trumpâ€™s polling percentage (53.00%) is substantially higher than Harrisâ€™s (40.50%), leading to a near-certain predicted win for Trump with a probability of 0.9998. Conversely, in **Michigan**, Harris holds a slight polling lead (46.27% vs. 44.52%), resulting in a predicted win for her with a lower probability of 0.036. Several states, such as **Montana** and **Missouri**, have extremely high probabilities of a Trump victory, while others, like **Nebraska CD-2** and **North Carolina**, lean toward Harris. The inclusion of predicted probabilities adds nuance by highlighting the confidence levels of the modelâ€™s predictions for each state, especially in swing states where polling percentages are closely contested.


# Discussion {#sec-discussion}

## Interpretation of Results {#sec-results-interpretation}

The results of the logistic regression model provide insights into the predicted winner of the 2024 US Presidential Election based on polling percentages for Donald Trump and Kamala Harris. The side-by-side bar graph comparing polling averages across states reveals a clear geographic divide. Trump tends to perform better in southern and midwestern states, while Harris shows stronger support in the northeastern and western regions. Swing states, where the polling differences between the two candidates are narrower, emerge as crucial battlegrounds that could determine the election outcome. The map visualization reinforces these trends, visually highlighting where each candidate is expected to win. These results align with historical voting patterns, but the model also emphasizes the close competition in key states that are not traditionally battlegrounds.

## Model Performance {#sec-model-performance}

The logistic regression model used in this analysis successfully captures the relationship between polling percentages and the likelihood of a candidate winning a state. The coefficients for the predictor variables (polling percentages for Trump and Harris) indicate a strong relationship between candidate support and the probability of winning. The model outputs probabilities for each state, which are useful for gauging the certainty of predictions, especially in closely contested states. The modelâ€™s performance is reinforced by the robustness of the results in states where one candidate has a clear polling lead, providing accurate predictions. However, states with narrower margins reflect greater uncertainty, which is critical in understanding election dynamics.

### Interpretation of Polling Averages by State

The bar graph displays the average polling percentages for Donald Trump (in red) and Kamala Harris (in blue) across various states. The comparison shows significant variability in support for each candidate. In some states like **Montana** and **Missouri**, Trumpâ€™s support is notably higher, with a clear margin over Harris. In contrast, **Colorado** stands out as having nearly equal polling support for both candidates, suggesting a closely contested race in that state.

Swing states such as **Florida**, **North Carolina**, and **Pennsylvania** exhibit relatively close polling percentages, indicating that the election outcomes in these states could be pivotal and difficult to predict. The plot also includes states like **Virginia** and **Texas**, where the support levels are more balanced, though Trump seems to hold a slight lead.

The state labeled as **NA** at the end may indicate missing or incomplete data, emphasizing the need for comprehensive polling coverage in all states for more reliable predictions.

Overall, the side-by-side comparison highlights the states where each candidate holds a significant lead and where the race remains competitive, offering a detailed view of the election's geographic dynamics.


## Weaknesses and next steps

Despite the model's predictive power, there are several weaknesses that should be noted. First, polling data itself is prone to biases, such as underrepresentation of certain demographic groups or inaccuracies in sampling. These issues can distort the predictions, particularly in states with fewer or lower-quality polls. Additionally, voter turnout and last-minute shifts in public opinion are not accounted for, which can significantly alter the outcome, especially in close races. The model also assumes that polling percentages directly translate to votes, overlooking other factors like voter mobilization efforts and campaign dynamics that may influence election outcomes.

To improve the accuracy and reliability of election forecasts, future iterations of the model could incorporate additional variables beyond polling data. Factors such as voter turnout models, economic conditions, and social media sentiment analysis may provide a more holistic view of voter behavior. Additionally, real-time polling data integration could allow for dynamic updates to predictions as the election nears, improving the timeliness and accuracy of forecasts. Moreover, regional adjustments to account for differences in polling methodology or demographic shifts would help to address some of the biases inherent in polling data. Expanding the model to include these aspects would offer a more comprehensive understanding of the election landscape and enhance the precision of predictions.



\newpage

\appendix

# Appendix {-}


# Additional data details

# Model details {#sec-model-details}

## Posterior predictive check

In @fig-ppcheckandposteriorvsprior-1 we implement a posterior predictive check. This shows...

In @fig-ppcheckandposteriorvsprior-2 we compare the posterior with the prior. This shows... 

```{r}
#| eval: true
#| echo: false
#| message: false
#| warning: false
#| label: fig-ppcheckandposteriorvsprior
#| layout-ncol: 2
#| fig-cap: "Examining how the model fits, and is affected by, the data"
#| fig-subcap: ["Posterior prediction check", "Comparing the posterior with the prior"]

#pp_check(first_model) +
  #theme_classic() +
  #theme(legend.position = "bottom")

#posterior_vs_prior(first_model) +
 # theme_minimal() +
  #scale_color_brewer(palette = "Set1") +
 # theme(legend.position = "bottom") +
  #coord_flip()
```

## Diagnostics

```{r}
#| echo: false
#| eval: true
#| label: tbl-modelsummary
#| tbl-cap: "Explanatory models of election outcome based on polling percentages for Trump and Harris"
#| warning: false


# Ensure the model exists
if (exists("logistic_model")) {
  # Create and display a model summary table in LaTeX format for PDF
  modelsummary::modelsummary(
    list("First Model" = logistic_model),
    statistic = c("std.error", "p.value"),  # Use standard error and p-value
    fmt = 2,  # Format numbers to 2 decimal places
    output = "latex"  # Use LaTeX for PDF output
  )
} else {
  print("Model not found")
}

#### Model Summary Table ####
# Create and display a model summary table
#modelsummary::modelsummary(
  #list("First Model" = logistic_model),
  #statistic = c("std.error", "p.value"),  # Use standard error and p-value
  #fmt = 2,  # Format numbers to 2 decimal places
  #output = "markdown"  # Output format for Quarto or RMarkdown
#)

```


@tbl-modelsummary presents the results of the logistic regression model predicting the winner of the 2024 US Presidential Election in each state based on polling percentages for Donald Trump and Kamala Harris. The coefficients indicate that an increase in Trumpâ€™s polling percentage (\( \beta = 8.72 \)) is positively associated with the probability of winning a state, whereas an increase in Harrisâ€™s polling percentage (\( \beta = -31.63 \)) is negatively associated with Trumpâ€™s probability of winning. The standard errors for both predictors are quite large, suggesting high variability in the estimates and possible uncertainty in the model.

The model diagnostics, including the AIC (6.0) and BIC (8.1), suggest that the model fits the data reasonably well given the small sample size of 15 observations. However, the low log-likelihood (0.000) and root mean squared error (RMSE = 0.00) indicate that the model may not be well-calibrated, likely due to the small dataset or the structure of the data. These results emphasize the importance of using a larger sample size.




\newpage


# References


