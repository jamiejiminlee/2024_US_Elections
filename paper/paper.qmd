---
title: "2024 US Presidential Election Model"
subtitle: "My subtitle if needed"
author: 
  - Jimin Lee
  - Sarah Ding
  - Xiyan Chen
thanks: "Code and data are available at: [https://github.com/jamiejiminlee/2024_US_Elections.git](https://github.com/jamiejiminlee/2024_US_Elections.git)."
date: today
date-format: long
abstract: "First sentence. Second sentence. Third sentence. Fourth sentence."
format: pdf
number-sections: true
bibliography: references.bib
---

```{r}
#| include: false
#| warning: false
#| message: false

library(tidyverse)
library(janitor)
library(lubridate)
library(modelsummary)
library(rstanarm)
library(readr)
library(dplyr)
library(ggplot2)
library(usmap)
```


# Introduction

Overview paragraph

Estimand paragraph

Results paragraph

Why it matters paragraph

Telegraphing paragraph: The remainder of this paper is structured as follows. @sec-data....






# Data {#sec-data}
```{r}
# Load the cleaned poll data
clean_poll_data <- read_csv("/Users/jamielee/2024_US_Elections/data/02-analysis_data/analysis_data.csv")

# Group by state and candidate, and calculate the average percentage (pct)
state_average <- clean_poll_data |>
  group_by(state, candidate_name) |>
  summarise(avg_pct = mean(pct, na.rm = TRUE)) |>
  pivot_wider(names_from = candidate_name, values_from = avg_pct) |>
  rename(Trump_pct = "Donald Trump", Harris_pct = "Kamala Harris")

# Replace missing values only in the numeric columns (Trump_pct, Harris_pct)
state_average <- state_average |>
  mutate(across(c(Trump_pct, Harris_pct), ~replace_na(., 0)))
```

## Overview

We use the statistical programming language R [@citeR].... Our data [@shelter].... Following @tellingstories, we consider...

Overview text

## Measurement
	
To predict the election outcome, we will assume that the higher pct in a state between Trump and Harris determines the winner of the election. The difference in pct is used as the predictor for which candidate wins each state. 

## Outcome variables

@fig-averagetable provides an overview of the average support for Trump and Harris across all states, along with the predicted winner for each state based on our model. 
```{r}
#| label: fig-averagetable
#| fig-cap: Summary Table of Polling Averages by State
#| echo: false

# Create winner column: 1 if Trump_pct is greater than Harris_pct, 0 otherwise
state_average <- state_average |>
  mutate(winner = ifelse(Trump_pct > Harris_pct, 1, 0))

average_table <- state_average |>
  select(state, Trump_pct, Harris_pct, winner) |>
  mutate(predicted_winner = ifelse(winner == 1, "Trump", "Harris"))

average_table
```

@fig-barplot illustrates the average polling support for Donald Trump and Kamala Harris in each state. The side-by-side comparison represents the percentage of support each candidate has received, based on aggregated poll data from pollsters with high-quality scores. Trump's support is shown in red, while Harris's support is depicted in red. 

```{r}
#| label: fig-barplot
#| fig-cap: Average Poll Percentage by State
#| echo: false

# Reshape data to a long format for side-by-side bars
stateaverage_long <- state_average %>%
  pivot_longer(cols = c(Trump_pct, Harris_pct),
               names_to = "candidate",
               values_to = "support_pct")

ggplot(stateaverage_long, aes(x=reorder(state, -support_pct), y= support_pct, fill = candidate)) + 
  geom_bar(stat = "identity", position = position_dodge(width = 0.8), color = "black") +
  labs(title = "Average Poll Percentages for Trump and Harris by State",
       x = "State", y = "Average Percentage") +
  scale_fill_manual(name = "Candidate", values = c("Trump_pct" = "red", "Harris_pct" = "blue")) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))
```

@fig-map visualizes the predicted winner of the 2024 US Presidential Election across all states, based on aggregated polling data. Each state is color-coded according to the candidate predicted to win - blue represents Donald Trump, and red represents Kamala Harris. 

```{r}
#| label: fig-map
#| fig-cap: Predicted Election Winner by State
#| echo: false
#| warning: false
#| message: false

library(ggplot2)
library(usmap)

# Ensuring state names are in the correct format
state_average <- state_average %>%
  mutate(state = str_to_title(state))

# Creating binary variable winner column: 1 if Trump has more support, 0 if Harris has more support. 
state_average <- state_average %>%
  mutate(winner = ifelse(Trump_pct > Harris_pct, 1, 0))

# Creating predicted_winner column to label Trump and Harris
state_average <- state_average |>
  mutate(predicted_winner = ifelse(winner == 1, "Trump", "Harris"))

# Map visualization showing predicted winner by state
plot_usmap(data = state_average, values = "predicted_winner", regions = "state") + 
  scale_fill_manual(values = c("Trump" = "red", "Harris" = "blue"), name = "Predicted Winner") + 
  labs(title = "Predicted Winner of 2024 US Presidential Election by state") + 
  theme(legend.position = "right")
```



## Predictor variables

Add graphs, tables and text.

Use sub-sub-headings for each outcome variable and feel free to combine a few into one if they go together naturally.








# Model

The goal of our modelling strategy is twofold. Firstly,...

Here we briefly describe the Bayesian analysis model used to investigate... Background details and diagnostics are included in [Appendix -@sec-model-details].

## Model set-up

Define $y_i$ as the number of seconds that the plane remained aloft. Then $\beta_i$ is the wing width and $\gamma_i$ is the wing length, both measured in millimeters.  

\begin{align} 
y_i|\mu_i, \sigma &\sim \mbox{Normal}(\mu_i, \sigma) \\
\mu_i &= \alpha + \beta_i + \gamma_i\\
\alpha &\sim \mbox{Normal}(0, 2.5) \\
\beta &\sim \mbox{Normal}(0, 2.5) \\
\gamma &\sim \mbox{Normal}(0, 2.5) \\
\sigma &\sim \mbox{Exponential}(1)
\end{align}

We run the model in R [@citeR] using the `rstanarm` package of @rstanarm. We use the default priors from `rstanarm`.


### Model justification

We expect a positive relationship between the size of the wings and time spent aloft. In particular...

We can use maths by including latex between dollar signs, for instance $\theta$.


# Results

Our results are summarized in @tbl-modelresults.

```{r}
#| echo: false
#| eval: true
#| warning: false
#| message: false

library(rstanarm)

first_model <-
  readRDS(file = here::here("models/first_model.rds"))
```

```{r}
#| echo: false
#| eval: true
#| label: tbl-modelresults
#| tbl-cap: "Explanatory models of flight time based on wing width and wing length"
#| warning: false

modelsummary::modelsummary(
  list(
    "First model" = first_model
  ),
  statistic = "mad",
  fmt = 2
)
```




# Discussion

## First discussion point {#sec-first-point}

If my paper were 10 pages, then should be be at least 2.5 pages. The discussion is a chance to show off what you know and what you learnt from all this. 

## Second discussion point

Please don't use these as sub-heading labels - change them to be what your point actually is.

## Third discussion point

## Weaknesses and next steps

Weaknesses and next steps should also be included.

\newpage

\appendix

# Appendix {-}


# Additional data details

# Model details {#sec-model-details}

## Posterior predictive check

In @fig-ppcheckandposteriorvsprior-1 we implement a posterior predictive check. This shows...

In @fig-ppcheckandposteriorvsprior-2 we compare the posterior with the prior. This shows... 

```{r}
#| eval: true
#| echo: false
#| message: false
#| warning: false
#| label: fig-ppcheckandposteriorvsprior
#| layout-ncol: 2
#| fig-cap: "Examining how the model fits, and is affected by, the data"
#| fig-subcap: ["Posterior prediction check", "Comparing the posterior with the prior"]

pp_check(first_model) +
  theme_classic() +
  theme(legend.position = "bottom")

posterior_vs_prior(first_model) +
  theme_minimal() +
  scale_color_brewer(palette = "Set1") +
  theme(legend.position = "bottom") +
  coord_flip()
```

## Diagnostics

@fig-stanareyouokay-1 is a trace plot. It shows... This suggests...

@fig-stanareyouokay-2 is a Rhat plot. It shows... This suggests...

```{r}
#| echo: false
#| eval: true
#| message: false
#| warning: false
#| label: fig-stanareyouokay
#| fig-cap: "Checking the convergence of the MCMC algorithm"
#| fig-subcap: ["Trace plot", "Rhat plot"]
#| layout-ncol: 2

plot(first_model, "trace")

plot(first_model, "rhat")
```



\newpage


# References


